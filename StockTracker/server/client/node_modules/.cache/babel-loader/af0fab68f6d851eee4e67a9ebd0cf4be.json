{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bennett\\\\eclipse-workspace\\\\StockTracker\\\\server\\\\client\\\\src\\\\StockList.js\";\nimport React from \"react\";\nimport StockItem from \"./StockItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst finnhub = require(\"finnhub\");\n\nconst api_key = finnhub.ApiClient.instance.authentications[\"api_key\"];\napi_key.apiKey = \"bvue7g748v6pkq83cj3g\";\nconst finnhubClient = new finnhub.DefaultApi(); //Boolean on whether the current stock is displayed, enables portfolio info,\n//refresh button, and list to appear once at least a single stock is displayed.\n\nlet stockdisplayed = false; //The list that keeps track of all stock entries in the list.\n\nlet staticlist = []; //Sum of the total portfolio price\n\nlet sum = 0; //Lets each stock item keep track of its place on the list.\n\nlet index = 0; //Rounds Numbers up to two digits.\n\nfunction roundTwo(num) {\n  return Math.round(num * 100) / 100;\n} //Determines if the current price is higher than at the beginning of the day.\n\n\nfunction determinePrice(current, open) {\n  if (current >= open) {\n    return \"green\";\n  } else {\n    return \"red\";\n  }\n}\n\nexport default class StockList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.lookupSymbol = () => {\n      //Prevents the screen from automatically refreshing.\n      //I don't know exactly what it does but my program breaks without it.\n      event.preventDefault();\n\n      try {\n        fetch(\"https://finnhub.io/api/v1/search?q=\" + this.state.currDisplay + \"&token=\" + api_key.apiKey).then(data => data.json()).then(res => {\n          if (res.count === 0) {\n            alert(\"Error: Stock not found\");\n            this.setState({\n              currDisplay: \"\"\n            });\n          } else {\n            this.displayInfo(res.result[0].displaySymbol, res.result[0].description);\n          }\n        });\n      } catch (err) {\n        alert(\"HTTP Error\");\n        this.setState({\n          currDisplay: \"\"\n        });\n      }\n    };\n\n    this.displayInfo = (symbol, name) => {\n      finnhubClient.quote(symbol, (error, data, response) => {\n        if (data === null) {\n          alert(\"Error finding stock\");\n          this.setState({\n            currDisplay: \"\"\n          });\n          return;\n        }\n\n        stockdisplayed = true;\n        sum += data.c;\n        staticlist.push({\n          name: name,\n          symbol: symbol,\n          color: determinePrice(data.c, data.o),\n          curr: data.c,\n          shares: 1\n        });\n        index++;\n        this.setState({\n          currDisplay: \"\"\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        currDisplay: event.target.value\n      });\n    };\n\n    this.clearList = () => {\n      event.preventDefault();\n      staticlist = [];\n      this.setState({\n        display: false\n      });\n      sum = 0;\n      stockdisplayed = false;\n    };\n\n    this.addShare = name => {\n      let item = staticlist.find(share => name === share.name);\n      sum += item.curr;\n      item.shares += 1;\n      this.setState({\n        currDisplay: \"\"\n      });\n    };\n\n    this.removeShare = name => {\n      let item = staticlist.find(share => name === share.name);\n      sum -= item.curr;\n      item.shares -= 1;\n      this.setState({\n        currDisplay: \"\"\n      });\n    };\n\n    this.deleteShare = name => {\n      let item = staticlist.find(share => name === share.name);\n      sum -= item.curr * item.shares;\n      staticlist.splice(staticlist.indexOf(item), 1);\n      this.setState({\n        currDisplay: \"\"\n      });\n    };\n\n    this.refreshList = () => {\n      sum = 0;\n      staticlist.forEach(item => {\n        finnhubClient.quote(item.symbol, (error, data, response) => {\n          if (data !== null) {\n            let newPrice = roundTwo(data.c);\n            sum += newPrice * item.shares;\n            item.color = determinePrice(newPrice, data.o);\n            item.curr = newPrice;\n            this.setState({\n              currDisplay: \"\"\n            });\n          }\n        });\n      });\n    };\n\n    this.state = {\n      currDisplay: \"\",\n      stock: \"\",\n      display: false\n    };\n  } //Retrieves the symbol from the api using a search function.\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter Stocks Below (Use Name):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: this.state.currDisplay,\n            onChange: this.handleChange,\n            index: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.lookupSymbol,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.clearList,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: stockdisplayed && \"Portfolio Value: $\" + roundTwo(sum)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: staticlist.map(item => /*#__PURE__*/_jsxDEV(StockItem, {\n          data: item.name,\n          color: item.color,\n          currentPrice: item.curr,\n          addShare: this.addShare,\n          decreaseShare: this.removeShare,\n          deleteShare: this.deleteShare\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), stockdisplayed && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.refreshList,\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Bennett/eclipse-workspace/StockTracker/server/client/src/StockList.js"],"names":["React","StockItem","finnhub","require","api_key","ApiClient","instance","authentications","apiKey","finnhubClient","DefaultApi","stockdisplayed","staticlist","sum","index","roundTwo","num","Math","round","determinePrice","current","open","StockList","Component","constructor","props","lookupSymbol","event","preventDefault","fetch","state","currDisplay","then","data","json","res","count","alert","setState","displayInfo","result","displaySymbol","description","err","symbol","name","quote","error","response","c","push","color","o","curr","shares","handleChange","target","value","clearList","display","addShare","item","find","share","removeShare","deleteShare","splice","indexOf","refreshList","forEach","newPrice","stock","render","map"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport StockItem from \"./StockItem\";\r\n\r\nconst finnhub = require(\"finnhub\");\r\nconst api_key = finnhub.ApiClient.instance.authentications[\"api_key\"];\r\napi_key.apiKey = \"bvue7g748v6pkq83cj3g\";\r\nconst finnhubClient = new finnhub.DefaultApi();\r\n\r\n//Boolean on whether the current stock is displayed, enables portfolio info,\r\n//refresh button, and list to appear once at least a single stock is displayed.\r\nlet stockdisplayed = false;\r\n\r\n//The list that keeps track of all stock entries in the list.\r\nlet staticlist = [];\r\n\r\n//Sum of the total portfolio price\r\nlet sum = 0;\r\n\r\n//Lets each stock item keep track of its place on the list.\r\nlet index = 0;\r\n\r\n//Rounds Numbers up to two digits.\r\nfunction roundTwo(num) {\r\n  return Math.round(num * 100) / 100;\r\n}\r\n\r\n//Determines if the current price is higher than at the beginning of the day.\r\nfunction determinePrice(current, open) {\r\n  if (current >= open) {\r\n    return \"green\";\r\n  } else {\r\n    return \"red\";\r\n  }\r\n}\r\n\r\nexport default class StockList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currDisplay: \"\",\r\n      stock: \"\",\r\n      display: false\r\n    };\r\n  }\r\n  //Retrieves the symbol from the api using a search function.\r\n  lookupSymbol = () => {\r\n    //Prevents the screen from automatically refreshing.\r\n    //I don't know exactly what it does but my program breaks without it.\r\n    event.preventDefault();\r\n    try {\r\n      fetch(\r\n        \"https://finnhub.io/api/v1/search?q=\" +\r\n          this.state.currDisplay +\r\n          \"&token=\" +\r\n          api_key.apiKey\r\n      )\r\n        .then((data) => data.json())\r\n        .then((res) => {\r\n          if (res.count === 0) {\r\n            alert(\"Error: Stock not found\");\r\n            this.setState({ currDisplay: \"\" });\r\n          } else {\r\n            this.displayInfo(\r\n              res.result[0].displaySymbol,\r\n              res.result[0].description\r\n            );\r\n          }\r\n        });\r\n    } catch (err) {\r\n      alert(\"HTTP Error\");\r\n      this.setState({ currDisplay: \"\" });\r\n    }\r\n  };\r\n\r\n  //Displays the Info using the symbol and the name, adds it to the list.\r\n  displayInfo = (symbol, name) => {\r\n    finnhubClient.quote(symbol, (error, data, response) => {\r\n      if (data === null) {\r\n        alert(\"Error finding stock\");\r\n        this.setState({ currDisplay: \"\" });\r\n        return;\r\n      }\r\n      stockdisplayed = true;\r\n      sum += data.c;\r\n      staticlist.push({\r\n        name: name,\r\n        symbol: symbol,\r\n        color: determinePrice(data.c, data.o),\r\n        curr: data.c,\r\n        shares: 1\r\n      });\r\n      index++;\r\n      this.setState({ currDisplay: \"\" });\r\n    });\r\n  };\r\n  //Updates the search box as the user types in a query.\r\n  handleChange = (event) => {\r\n    this.setState({ currDisplay: event.target.value });\r\n  };\r\n\r\n  //Clears the list of all entries.\r\n  clearList = () => {\r\n    event.preventDefault();\r\n    staticlist = [];\r\n    this.setState({ display: false });\r\n    sum = 0;\r\n    stockdisplayed = false;\r\n  };\r\n\r\n  //Adds a share to the list item.\r\n  addShare = (name) => {\r\n    let item = staticlist.find((share) => name === share.name);\r\n    sum += item.curr;\r\n    item.shares += 1;\r\n    this.setState({ currDisplay: \"\" });\r\n  };\r\n\r\n  //Removes a share from the list item.\r\n  removeShare = (name) => {\r\n    let item = staticlist.find((share) => name === share.name);\r\n    sum -= item.curr;\r\n    item.shares -= 1;\r\n    this.setState({ currDisplay: \"\" });\r\n  };\r\n\r\n  deleteShare = (name) => {\r\n    let item = staticlist.find((share) => name === share.name);\r\n    sum -= item.curr * item.shares;\r\n    staticlist.splice(staticlist.indexOf(item), 1);\r\n    this.setState({ currDisplay: \"\" });\r\n  };\r\n\r\n  //Updates every list item with the current price and color.\r\n  refreshList = () => {\r\n    sum = 0;\r\n    staticlist.forEach((item) => {\r\n      finnhubClient.quote(item.symbol, (error, data, response) => {\r\n        if (data !== null) {\r\n          let newPrice = roundTwo(data.c);\r\n          sum += newPrice * item.shares;\r\n          item.color = determinePrice(newPrice, data.o);\r\n          item.curr = newPrice;\r\n          this.setState({ currDisplay: \"\" });\r\n        }\r\n      });\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Enter Stocks Below (Use Name):</h2>\r\n        <form>\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.currDisplay}\r\n              onChange={this.handleChange}\r\n              index={index}\r\n            />\r\n          </label>\r\n          <button onClick={this.lookupSymbol}>Submit</button>\r\n          <button onClick={this.clearList}>Clear</button>\r\n        </form>\r\n        <p>{stockdisplayed && \"Portfolio Value: $\" + roundTwo(sum)}</p>\r\n        <ul>\r\n          {staticlist.map((item) => (\r\n            <StockItem\r\n              data={item.name}\r\n              color={item.color}\r\n              currentPrice={item.curr}\r\n              addShare={this.addShare}\r\n              decreaseShare={this.removeShare}\r\n              deleteShare={this.deleteShare}\r\n            />\r\n          ))}\r\n        </ul>\r\n        {stockdisplayed && <button onClick={this.refreshList}>Refresh</button>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}