{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Bennett\\\\eclipse-workspace\\\\StockTracker\\\\server\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Bennett\\\\eclipse-workspace\\\\StockTracker\\\\server\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Bennett\\\\eclipse-workspace\\\\StockTracker\\\\server\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Bennett\\\\eclipse-workspace\\\\StockTracker\\\\server\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Bennett\\\\eclipse-workspace\\\\StockTracker\\\\server\\\\client\\\\src\\\\StockList.js\";\nimport React from \"react\";\nimport StockItem from \"./StockItem\";\n\nvar finnhub = require(\"finnhub\");\n\nvar api_key = finnhub.ApiClient.instance.authentications[\"api_key\"];\napi_key.apiKey = \"bvue7g748v6pkq83cj3g\";\nvar finnhubClient = new finnhub.DefaultApi(); //Boolean on whether the current stock is displayed, enables portfolio info,\n//refresh button, and list to appear once at least a single stock is displayed.\n\nvar stockdisplayed = false; //The list that keeps track of all stock entries in the list.\n\nvar staticlist = []; //Sum of the total portfolio price\n\nvar sum = 0; //Lets each stock item keep track of its place on the list.\n\nvar index = 0; //Rounds Numbers up to two digits.\n\nfunction roundTwo(num) {\n  return Math.round(num * 100) / 100;\n} //Determines if the current price is higher than at the beginning of the day.\n\n\nfunction determinePrice(current, open) {\n  if (current >= open) {\n    return \"green\";\n  } else {\n    return \"red\";\n  }\n}\n\nvar StockList = /*#__PURE__*/function (_React$Component) {\n  _inherits(StockList, _React$Component);\n\n  var _super = _createSuper(StockList);\n\n  function StockList(props) {\n    var _this;\n\n    _classCallCheck(this, StockList);\n\n    _this = _super.call(this, props);\n\n    _this.lookupSymbol = function () {\n      //Prevents the screen from automatically refreshing.\n      //I don't know exactly what it does but my program breaks without it.\n      //event.preventDefault();\n      try {\n        fetch(\"https://finnhub.io/api/v1/search?q=\" + _this.state.currDisplay + \"&token=\" + api_key.apiKey).then(function (data) {\n          return data.json();\n        }).then(function (res) {\n          if (res.count === 0) {\n            alert(\"Error: Stock not found\");\n\n            _this.setState({\n              currDisplay: \"\"\n            });\n          } else {\n            _this.displayInfo(res.result[0].displaySymbol, res.result[0].description);\n          }\n        });\n      } catch (err) {\n        alert(\"HTTP Error\");\n\n        _this.setState({\n          currDisplay: \"\"\n        });\n      }\n    };\n\n    _this.displayInfo = function (symbol, name) {\n      finnhubClient.quote(symbol, function (error, data, response) {\n        if (data === null) {\n          alert(\"Error finding stock\");\n\n          _this.setState({\n            currDisplay: \"\"\n          });\n\n          return;\n        }\n\n        stockdisplayed = true;\n        sum += data.c;\n        staticlist.push({\n          name: name,\n          symbol: symbol,\n          color: determinePrice(data.c, data.o),\n          curr: data.c,\n          shares: 1\n        });\n        index++;\n\n        _this.setState({\n          currDisplay: \"\"\n        });\n      });\n    };\n\n    _this.handleChange = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        currDisplay: event.target.value\n      });\n    };\n\n    _this.clearList = function () {\n      //event.preventDefault();\n      staticlist = [];\n\n      _this.setState({\n        display: false\n      });\n\n      sum = 0;\n      stockdisplayed = false;\n    };\n\n    _this.addShare = function (name) {\n      var item = staticlist.find(function (share) {\n        return name === share.name;\n      });\n      sum += item.curr;\n      item.shares += 1;\n\n      _this.setState({\n        currDisplay: \"\"\n      });\n    };\n\n    _this.removeShare = function (name) {\n      var item = staticlist.find(function (share) {\n        return name === share.name;\n      });\n      sum -= item.curr;\n      item.shares -= 1;\n\n      _this.setState({\n        currDisplay: \"\"\n      });\n    };\n\n    _this.deleteShare = function (name) {\n      var item = staticlist.find(function (share) {\n        return name === share.name;\n      });\n      sum -= item.curr * item.shares;\n      staticlist.splice(staticlist.indexOf(item), 1);\n\n      _this.setState({\n        currDisplay: \"\"\n      });\n    };\n\n    _this.refreshList = function () {\n      sum = 0;\n      staticlist.forEach(function (item) {\n        finnhubClient.quote(item.symbol, function (error, data, response) {\n          if (data !== null) {\n            var newPrice = roundTwo(data.c);\n            sum += newPrice * item.shares;\n            item.color = determinePrice(newPrice, data.o);\n            item.curr = newPrice;\n\n            _this.setState({\n              currDisplay: \"\"\n            });\n          }\n        });\n      });\n    };\n\n    _this.state = {\n      currDisplay: \"\",\n      stock: \"\",\n      display: false\n    };\n    return _this;\n  } //Retrieves the symbol from the api using a search function.\n\n\n  _createClass(StockList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }, \"Enter Stocks Below (Use Name):\"), /*#__PURE__*/React.createElement(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: this.state.currDisplay,\n        onChange: this.handleChange,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.lookupSymbol,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.clearList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }, \"Clear\")), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }\n      }, stockdisplayed && \"Portfolio Value: $\" + roundTwo(sum)), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }\n      }, staticlist.map(function (item) {\n        return /*#__PURE__*/React.createElement(StockItem, {\n          data: item.name,\n          color: item.color,\n          currentPrice: item.curr,\n          addShare: _this2.addShare,\n          decreaseShare: _this2.removeShare,\n          deleteShare: _this2.deleteShare,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }\n        });\n      })), stockdisplayed && /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.refreshList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 28\n        }\n      }, \"Refresh\"));\n    }\n  }]);\n\n  return StockList;\n}(React.Component);\n\nexport { StockList as default };","map":{"version":3,"sources":["C:/Users/Bennett/eclipse-workspace/StockTracker/server/client/src/StockList.js"],"names":["React","StockItem","finnhub","require","api_key","ApiClient","instance","authentications","apiKey","finnhubClient","DefaultApi","stockdisplayed","staticlist","sum","index","roundTwo","num","Math","round","determinePrice","current","open","StockList","props","lookupSymbol","fetch","state","currDisplay","then","data","json","res","count","alert","setState","displayInfo","result","displaySymbol","description","err","symbol","name","quote","error","response","c","push","color","o","curr","shares","handleChange","event","preventDefault","target","value","clearList","display","addShare","item","find","share","removeShare","deleteShare","splice","indexOf","refreshList","forEach","newPrice","stock","map","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport StockItem from \"./StockItem\";\r\n\r\nconst finnhub = require(\"finnhub\");\r\nconst api_key = finnhub.ApiClient.instance.authentications[\"api_key\"];\r\napi_key.apiKey = \"bvue7g748v6pkq83cj3g\";\r\nconst finnhubClient = new finnhub.DefaultApi();\r\n\r\n//Boolean on whether the current stock is displayed, enables portfolio info,\r\n//refresh button, and list to appear once at least a single stock is displayed.\r\nlet stockdisplayed = false;\r\n\r\n//The list that keeps track of all stock entries in the list.\r\nlet staticlist = [];\r\n\r\n//Sum of the total portfolio price\r\nlet sum = 0;\r\n\r\n//Lets each stock item keep track of its place on the list.\r\nlet index = 0;\r\n\r\n//Rounds Numbers up to two digits.\r\nfunction roundTwo(num) {\r\n  return Math.round(num * 100) / 100;\r\n}\r\n\r\n//Determines if the current price is higher than at the beginning of the day.\r\nfunction determinePrice(current, open) {\r\n  if (current >= open) {\r\n    return \"green\";\r\n  } else {\r\n    return \"red\";\r\n  }\r\n}\r\n\r\nexport default class StockList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currDisplay: \"\",\r\n      stock: \"\",\r\n      display: false\r\n    };\r\n  }\r\n  //Retrieves the symbol from the api using a search function.\r\n  lookupSymbol = () => {\r\n    //Prevents the screen from automatically refreshing.\r\n    //I don't know exactly what it does but my program breaks without it.\r\n    //event.preventDefault();\r\n    try {\r\n      fetch(\r\n        \"https://finnhub.io/api/v1/search?q=\" +\r\n          this.state.currDisplay +\r\n          \"&token=\" +\r\n          api_key.apiKey\r\n      )\r\n        .then((data) => data.json())\r\n        .then((res) => {\r\n          if (res.count === 0) {\r\n            alert(\"Error: Stock not found\");\r\n            this.setState({ currDisplay: \"\" });\r\n          } else {\r\n            this.displayInfo(\r\n              res.result[0].displaySymbol,\r\n              res.result[0].description\r\n            );\r\n          }\r\n        });\r\n    } catch (err) {\r\n      alert(\"HTTP Error\");\r\n      this.setState({ currDisplay: \"\" });\r\n    }\r\n  };\r\n\r\n  //Displays the Info using the symbol and the name, adds it to the list.\r\n  displayInfo = (symbol, name) => {\r\n    finnhubClient.quote(symbol, (error, data, response) => {\r\n      if (data === null) {\r\n        alert(\"Error finding stock\");\r\n        this.setState({ currDisplay: \"\" });\r\n        return;\r\n      }\r\n      stockdisplayed = true;\r\n      sum += data.c;\r\n      staticlist.push({\r\n        name: name,\r\n        symbol: symbol,\r\n        color: determinePrice(data.c, data.o),\r\n        curr: data.c,\r\n        shares: 1\r\n      });\r\n      index++;\r\n      this.setState({ currDisplay: \"\" });\r\n    });\r\n  };\r\n  //Updates the search box as the user types in a query.\r\n  handleChange = (event) => {\r\n\tevent.preventDefault();\r\n    this.setState({ currDisplay: event.target.value });\r\n  };\r\n\r\n  //Clears the list of all entries.\r\n  clearList = () => {\r\n    //event.preventDefault();\r\n    staticlist = [];\r\n    this.setState({ display: false });\r\n    sum = 0;\r\n    stockdisplayed = false;\r\n  };\r\n\r\n  //Adds a share to the list item.\r\n  addShare = (name) => {\r\n    let item = staticlist.find((share) => name === share.name);\r\n    sum += item.curr;\r\n    item.shares += 1;\r\n    this.setState({ currDisplay: \"\" });\r\n  };\r\n\r\n  //Removes a share from the list item.\r\n  removeShare = (name) => {\r\n    let item = staticlist.find((share) => name === share.name);\r\n    sum -= item.curr;\r\n    item.shares -= 1;\r\n    this.setState({ currDisplay: \"\" });\r\n  };\r\n\r\n  deleteShare = (name) => {\r\n    let item = staticlist.find((share) => name === share.name);\r\n    sum -= item.curr * item.shares;\r\n    staticlist.splice(staticlist.indexOf(item), 1);\r\n    this.setState({ currDisplay: \"\" });\r\n  };\r\n\r\n  //Updates every list item with the current price and color.\r\n  refreshList = () => {\r\n    sum = 0;\r\n    staticlist.forEach((item) => {\r\n      finnhubClient.quote(item.symbol, (error, data, response) => {\r\n        if (data !== null) {\r\n          let newPrice = roundTwo(data.c);\r\n          sum += newPrice * item.shares;\r\n          item.color = determinePrice(newPrice, data.o);\r\n          item.curr = newPrice;\r\n          this.setState({ currDisplay: \"\" });\r\n        }\r\n      });\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Enter Stocks Below (Use Name):</h2>\r\n        <form>\r\n          <label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.currDisplay}\r\n              onChange={this.handleChange}\r\n              index={index}\r\n            />\r\n          </label>\r\n          <button onClick={this.lookupSymbol}>Submit</button>\r\n          <button onClick={this.clearList}>Clear</button>\r\n        </form>\r\n        <p>{stockdisplayed && \"Portfolio Value: $\" + roundTwo(sum)}</p>\r\n        <ul>\r\n          {staticlist.map((item) => (\r\n            <StockItem\r\n              data={item.name}\r\n              color={item.color}\r\n              currentPrice={item.curr}\r\n              addShare={this.addShare}\r\n              decreaseShare={this.removeShare}\r\n              deleteShare={this.deleteShare}\r\n            />\r\n          ))}\r\n        </ul>\r\n        {stockdisplayed && <button onClick={this.refreshList}>Refresh</button>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}